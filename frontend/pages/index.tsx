import Head from "next/head";
import Image from "next/image";
import { GetServerSideProps, NextPage } from "next";
import { wrapper } from "@/redux/store";
import { fetchBaseProducts } from "@/redux/slices/product";
import { fetchHangars, fetchRacks } from "@/redux/slices/storage";
import { setCurrentUser } from "@/redux/slices/auth";
import { User } from "@/types";
import Layout from "@/components/Layout";

export const getServerSideProps: GetServerSideProps =
  wrapper.getServerSideProps((store) => async (context) => {
    const authToken = context.req.cookies?.token;

    if (authToken) {
      const authApiReq = await fetch(
        `http://${process.env.API_HOST}:${process.env.API_PORT}/api/auth/getTokenUser`,
        {
          method: "GET",
          headers: {
            Authorization: "Bearer " + authToken,
          },
        }
      );

      if (authApiReq.status == 200) {
        const currentUser = (await authApiReq.json()) as User;

        store.dispatch(setCurrentUser({ currentUser }));
      } else {
        const response = await fetch(
          `http://${process.env.NEXT_HOST}:${process.env.NEXT_PORT}/api/auth/logout`
        );
        const data = await response.json();

        console.log(data);

        return {
          redirect: {
            permanent: false,
            destination: "/auth/login",
          },
          props: {},
        };
      }
    } else {
      return {
        redirect: {
          permanent: false,
          destination: "/auth/login",
        },
        props: {},
      };
    }

    await store.dispatch(fetchBaseProducts());
    await store.dispatch(fetchHangars());
    await store.dispatch(fetchRacks());

    return { props: {} };
  });

const Home: NextPage = () => {
  return (
    <>
      <Head>
        <title>Homepage</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Layout>
        <div className="flex flex-item"> HomePage </div>
      </Layout>
    </>
  );
};

export default Home;
